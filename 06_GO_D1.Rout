WARNING: unknown option '--vanulla'


R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> suppressPackageStartupMessages(library(GOstats))
Warning message:
package ‘BiocGenerics’ was built under R version 4.0.5 
> suppressPackageStartupMessages(library(org.Hs.eg.db))
> suppressPackageStartupMessages(library(org.Mm.eg.db))
> suppressPackageStartupMessages(library(multtest))
> 
> dogo <- function(names,universe,species="human", goP = 0.05, 
+ 	cond=FALSE, ontology = "BP"){
+     if(species=="human"){
+ 		golib="org.Hs.eg.db"
+ 		library(golib,character.only=TRUE)
+ 		gomap= org.Hs.egSYMBOL2EG
+   } else  if (species == "mouse") {
+ 		golib="org.Mm.eg.db"
+ 		library(golib,character.only=TRUE)
+ 		gomap= org.Mm.egSYMBOL2EG
+ 	}
+   require(GOstats)
+   x=unlist(mget(as.character(names), gomap,ifnotfound = NA))
+   x=x[!is.na(x)]
+   Universe=unlist(mget(as.character(universe),gomap,ifnotfound = NA))
+  Universe=unique(c(Universe[!is.na(Universe)],unique(x)))
+ 
+   params <- new("GOHyperGParams", geneIds = unique(x),
+                 universeGeneIds = Universe,
+                 annotation = golib,
+                 ontology = ontology, pvalueCutoff = goP, conditional = cond,
+                 testDirection="over")
+   ht=hyperGTest(params)
+   tab=summary(ht)
+   tmp1=geneIdsByCategory(ht)
+   tmp1=tmp1[tab[,1]]
+   tab$IDs=sapply(tmp1,function(y) paste(names(x)[x%in%y],collapse=";"))
+   return(tab)
+ 
+ }
> 
> # How to run
> #load("NoStress_dge_output/NoStress_Dge_Data.RData")
> mod=read.table("D1_dge/D1_Dge_HumanID.txt",sep="\t",header=T)
> mod$Gene <- as.character(mod$Gene)
> mod$Direction <- as.factor(mod$Direction)
> 
> uni <- read.table("utils/gencode.v24.annotation.protcod.length.genebody.txt")
> uni_genes <- rownames(uni)
> 
> listBP=list()
> dfBP=list()
> listMF=list()
> dfMF=list()
> listCC=list()
> dfCC=list()
> for (net in levels(mod$Direction)) {
+ listBP[[net]]=mod[mod$Direction == net,]
+ listMF[[net]]=mod[mod$Direction == net,]
+ listCC[[net]]=mod[mod$Direction == net,]
+ dfBP[[net]]=dogo(listBP[[net]]$Gene,uni_genes,species="human", goP = 1,cond=FALSE, ontology = "BP")
+ dfBP[[net]]$padj=p.adjust(dfBP[[net]]$Pvalue,method="BH")
+ dfBP[[net]]=dfBP[[net]][dfBP[[net]]$padj < 0.2,]
+ dfMF[[net]]=dogo(listMF[[net]]$Gene,uni_genes,species="human", goP = 1,cond=FALSE, ontology = "MF")
+ dfMF[[net]]$padj=p.adjust(dfMF[[net]]$Pvalue,method="BH")
+ dfMF[[net]]=dfMF[[net]][dfMF[[net]]$padj < 0.2,]
+ dfCC[[net]]=dogo(listCC[[net]]$Gene,uni_genes,species="human", goP = 1,cond=FALSE, ontology = "CC")
+ dfCC[[net]]$padj=p.adjust(dfCC[[net]]$Pvalue,method="BH")
+ dfCC[[net]]=dfCC[[net]][dfCC[[net]]$padj < 0.2,]
+ }
> 
> dir.create("d1_dge/GO_D1/")
> dir.create("d1_dge/GO_D1/GO_BP/")
> dir.create("d1_dge/GO_D1/GO_MF/")
> dir.create("d1_dge/GO_D1/GO_CC/")
> 
> net=levels(mod$Direction)
> for (i in 1:length(dfBP)) write.table(dfBP[[i]], file = paste("d1_dge/GO_D1/GO_BP/BP_", net[[i]], ".txt",sep = ""),sep="\t",quote=F)
> for (i in 1:length(dfMF)) write.table(dfMF[[i]], file = paste("d1_dge/GO_D1/GO_MF/MF_", net[[i]], ".txt",sep = ""),sep="\t",quote=F)
> for (i in 1:length(dfCC)) write.table(dfCC[[i]], file = paste("d1_dge/GO_D1/GO_CC/CC_", net[[i]], ".txt",sep = ""),sep="\t",quote=F)
> 
> # Create Plots
> setwd("d1_dge/GO_D1/")
> 
> library(ggpubr)
Loading required package: ggplot2
> library(tidyverse)
── Attaching packages ────────────────────────────────── tidyverse 1.3.0.9000 ──
✔ tibble  3.1.3     ✔ dplyr   1.0.7
✔ tidyr   1.1.3     ✔ stringr 1.4.0
✔ readr   2.0.1     ✔ forcats 0.5.1
✔ purrr   0.3.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ stringr::boundary() masks graph::boundary()
✖ dplyr::collapse()   masks IRanges::collapse()
✖ dplyr::combine()    masks Biobase::combine(), BiocGenerics::combine()
✖ dplyr::desc()       masks IRanges::desc()
✖ tidyr::expand()     masks Matrix::expand(), S4Vectors::expand()
✖ dplyr::filter()     masks stats::filter()
✖ dplyr::first()      masks S4Vectors::first()
✖ dplyr::lag()        masks stats::lag()
✖ tidyr::pack()       masks Matrix::pack()
✖ ggplot2::Position() masks BiocGenerics::Position(), base::Position()
✖ purrr::reduce()     masks IRanges::reduce()
✖ dplyr::rename()     masks S4Vectors::rename()
✖ dplyr::select()     masks AnnotationDbi::select()
✖ dplyr::slice()      masks IRanges::slice()
✖ tidyr::unpack()     masks Matrix::unpack()
> 
> files = list.files(path="GO_BP",pattern = '*.txt',full.names = TRUE)
> names <- gsub( "GO_BP/|BP_|.txt", "", files )
> GeneSets = lapply(files, read.table,header=T,sep="\t")
Warning messages:
1: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  EOF within quoted string
2: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  number of items read is not a multiple of the number of columns
3: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  EOF within quoted string
4: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  number of items read is not a multiple of the number of columns
> names(GeneSets) <- names
> 
> 
> filt <- vector("list", length = length(GeneSets))
> names(filt) <- names(GeneSets)
> class <- names(GeneSets)
> for (i in 1:length(GeneSets))
+     {
+       filt[[i]] <- GeneSets[[i]] %>% 
+               filter(Count > 5 & 
+               Pvalue < 0.05) %>%
+               select(Term,Pvalue,OddsRatio) %>% 
+               mutate(log = -log10(Pvalue)) %>%
+               as.data.frame()
+   }
> 
> for (i in 1:length(GeneSets))
+     {
+   filt[[i]]$Class <- factor(rep(class[i],nrow(filt[[i]])))
+   }
> 
> df <- do.call(rbind,filt)
> 
> 
> top_labelled <- tbl_df(df) %>% 
+                   group_by(Class) %>% 
+                   top_n(n = 5, wt = abs(log))
Warning message:
`tbl_df()` was deprecated in dplyr 1.0.0.
Please use `tibble::as_tibble()` instead.
This warning is displayed once every 8 hours.
Call `lifecycle::last_warnings()` to see where this warning was generated. 
> 
> 
> pdf("BP_D1_enrichment.pdf",width=8,height=3,useDingbats=FALSE)
> ggscatter(top_labelled, x = "log", y = "OddsRatio",
+    color = "Class", palette = c("royalblue", "royalblue", "royalblue"),size = 2,
+    label = "Term", repel = TRUE,font.label = c(8, "plain"))+
+ xlab("-log10(p-value)")+ 
+ ylab("Odds Ratio") +
+ facet_wrap(~Class,ncol=3,nrow=1,scales="free")+
+ theme_classic()+
+ theme(legend.position="none")
> 
> dev.off()
null device 
          1 
> 
> 
> files = list.files(path="GO_MF",pattern = '*.txt',full.names = TRUE)
> names <- gsub( "GO_MF/|MF_|.txt", "", files )
> GeneSets = lapply(files, read.table,header=T,sep="\t")
Warning messages:
1: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  EOF within quoted string
2: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  number of items read is not a multiple of the number of columns
3: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  EOF within quoted string
4: In scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  :
  number of items read is not a multiple of the number of columns
> names(GeneSets) <- names
> 
> 
> filt <- vector("list", length = length(GeneSets))
> names(filt) <- names(GeneSets)
> class <- names(GeneSets)
> for (i in 1:length(GeneSets))
+     {
+       filt[[i]] <- GeneSets[[i]] %>% 
+               filter(Count > 5 & 
+               Pvalue < 0.05) %>%
+               select(Term,Pvalue,OddsRatio) %>% 
+               mutate(log = -log10(Pvalue)) %>%
+               as.data.frame()
+   }
> 
> for (i in 1:length(GeneSets))
+     {
+   filt[[i]]$Class <- factor(rep(class[i],nrow(filt[[i]])))
+   }
> 
> df <- do.call(rbind,filt)
> 
> 
> top_labelled <- tbl_df(df) %>% 
+                   group_by(Class) %>% 
+                   top_n(n = 5, wt = abs(log))
> 
> 
> pdf("MF_D1_enrichment.pdf",width=8,height=3,useDingbats=FALSE)
> ggscatter(top_labelled, x = "log", y = "OddsRatio",
+    color = "Class", palette = c("royalblue", "royalblue", "royalblue"),size = 2,
+    label = "Term", repel = TRUE,font.label = c(8, "plain"))+
+ xlab("-log10(p-value)")+ 
+ ylab("Odds Ratio") +
+ facet_wrap(~Class,ncol=3,nrow=1,scales="free")+
+ theme_classic()+
+ theme(legend.position="none")
> 
> dev.off()
null device 
          1 
> 
> 
> files = list.files(path="GO_CC",pattern = '*.txt',full.names = TRUE)
> names <- gsub( "GO_CC/|CC_|.txt", "", files )
> GeneSets = lapply(files, read.table,header=T,sep="\t")
> names(GeneSets) <- names
> 
> 
> filt <- vector("list", length = length(GeneSets))
> names(filt) <- names(GeneSets)
> class <- names(GeneSets)
> for (i in 1:length(GeneSets))
+     {
+       filt[[i]] <- GeneSets[[i]] %>% 
+               filter(Count > 5 & 
+               Pvalue < 0.05) %>%
+               select(Term,Pvalue,OddsRatio) %>% 
+               mutate(log = -log10(Pvalue)) %>%
+               as.data.frame()
+   }
> 
> for (i in 1:length(GeneSets))
+     {
+   filt[[i]]$Class <- factor(rep(class[i],nrow(filt[[i]])))
+   }
> 
> df <- do.call(rbind,filt)
> 
> 
> top_labelled <- tbl_df(df) %>% 
+                   group_by(Class) %>% 
+                   top_n(n = 5, wt = abs(log))
> 
> 
> pdf("CC_D1_enrichment.pdf",width=8,height=3,useDingbats=FALSE)
> ggscatter(top_labelled, x = "log", y = "OddsRatio",
+    color = "Class", palette = c("royalblue", "royalblue", "royalblue"),size = 2,
+    label = "Term", repel = TRUE,font.label = c(8, "plain"))+
+ xlab("-log10(p-value)")+ 
+ ylab("Odds Ratio") +
+ facet_wrap(~Class,ncol=3,nrow=1,scales="free")+
+ theme_classic()+
+ theme(legend.position="none")
> dev.off()
null device 
          1 
> 
> 
> proc.time()
   user  system elapsed 
250.997  40.854 293.135 
